name: Test

# Workflow conditions
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]
  workflow_call:

env:
  GITHUB_USERNAME: ${{ github.actor }}
  GITHUB_TOKEN: ${{ github.token }}
  DOCKER_IMAGE: "ghcr.io/${{ github.repository }}"

jobs:

  # ---------------------------------------------------------------------------
  #  Build the docker container first
  docker:
    uses: ./.github/workflows/docker.yaml

  # ---------------------------------------------------------------------------
  test-docker:
    needs: docker
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: pangwas-docker
          path: .

      # parse tag from load output, PR have unusual formats, also sometimes multiple tags
      - name: Load Docker Image
        run: |
          load=$(docker load --input pangwas.tar | tee /dev/stderr)
          echo -e $load
          TAG=$(echo -e $load | sed 's/Loaded image: //g' | head -n 1 | cut -d ":" -f 2 | cut -d " " -f 1)
          echo DOCKER_TAG="$TAG" >> $GITHUB_ENV

      - name: CLI Help
        run: |
          docker run -e GITHUB_TOKEN=${{ github.token }} $DOCKER_IMAGE:$DOCKER_TAG pangwas --help

      - name: Pytest
        run: |
          docker run -e GITHUB_TOKEN=${{ github.token }} $DOCKER_IMAGE:$DOCKER_TAG pytest --validate

      - name: Nextflow Help
        run: |
          docker run -e GITHUB_TOKEN=${{ github.token }} $DOCKER_IMAGE:$DOCKER_TAG nextflow run . --help

      - name: Nextflow Test
        run: |
          docker run -e GITHUB_TOKEN=${{ github.token }} $DOCKER_IMAGE:$DOCKER_TAG nextflow run . -profile test

  # ---------------------------------------------------------------------------
  # Test micromamba runtime  
  micromamba:
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment.yml
          init-shell: >-
            bash
          cache-environment: true
          post-cleanup: 'all'

      - name: Install
        shell: micromamba-shell {0}
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test]

      - name: CLI Help
        shell: micromamba-shell {0}
        run: |
          pangwas --help

      - name: Pytest
        shell: micromamba-shell {0}
        run: |
          pytest --validate

      - name: Nextflow Help
        shell: micromamba-shell {0}
        run: |
          nextflow run . --help

      - name: Nextflow Test
        shell: micromamba-shell {0}
        run: |
          nextflow run . -profile test

      - name: Nextflow Tutorial S. pneumoniae
        shell: micromamba-shell {0}
        run: |
          nextflow run . -profile streptococcus_pneumoniae --skip_align

      - name: Nextflow Tutorial Core
        shell: micromamba-shell {0}
        run: |
          gunzip data/tutorial_core/snps.Rtab.gz
          nextflow run . -profile tutorial_core

      - name: Nextflow Tutorial Pangenome
        shell: micromamba-shell {0}
        run: |
          gunzip data/tutorial_pangenome/variants.Rtab.gz
          gunzip data/tutorial_pangenome/clusters.tsv.gz
          nextflow run . -profile tutorial_pangenome

      - name: Upload Code Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 7
          if-no-files-found: error

  # ---------------------------------------------------------------------------
  # test nextflow runtime
  nextflow:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup nextflow
        uses: nf-core/setup-nextflow@v1

      - name: Nextflow Help
        run: |
          nextflow run . --help

      # - name: Nextflow Docker
      #   run: |
      #     nextflow run . -profile test,docker

      # - name: Nextflow Micromamba
      #   run: |
      #     nextflow run . -profile test,micromamba

  # ---------------------------------------------------------------------------
  # render documentation site using quarto   
  docs:
    needs: micromamba
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          generate-run-shell: true
          init-shell: >-
            bash
          cache-environment: true
          post-cleanup: 'all'
          environment-name: quarto
          create-args: >-
            quarto=1.5.57

      - name: Download Code Coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage/
  
      - name: Render
        shell: micromamba-shell {0}
        run: |
          mv coverage docs/
          quarto render docs
          mv docs/coverage/* site/coverage/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: site/
          retention-days: 7
          if-no-files-found: error

  # ---------------------------------------------------------------------------
  # deploy documentation site to github pages
  deploy:
    needs: docs
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: website
          path: public/

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        if: github.ref == 'refs/heads/main'
        with:
          folder: public