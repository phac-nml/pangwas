name: Python

on:
  workflow_call:

env:
  GITHUB_USERNAME: ${{ github.actor }}
  GITHUB_TOKEN: ${{ github.token }}
  DOCKER_IMAGE: "ghcr.io/${{ github.repository }}"

jobs:

  # # ---------------------------------------------------------------------------
  # #  Build the docker container first
  # docker:
  #   uses: ./.github/workflows/docker.yaml

  # # ---------------------------------------------------------------------------
  # test-docker:
  #   needs: docker
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-latest]

  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     - name: Download Docker Image
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: pangonet-docker
  #         path: .

  #     # parse tag from load output, PR have unusual formats, also sometimes multiple tags
  #     - name: Load Docker Image
  #       run: |
  #         load=$(docker load --input pangonet.tar | tee /dev/stderr)
  #         echo -e $load
  #         TAG=$(echo -e $load | sed 's/Loaded image: //g' | head -n 1 | cut -d ":" -f 2 | cut -d " " -f 1)
  #         echo DOCKER_TAG="$TAG" >> $GITHUB_ENV

  #     - name: CLI Help
  #       run: |
  #         docker run -e GITHUB_TOKEN=${{ github.token }} $DOCKER_IMAGE:$DOCKER_TAG pangwas --help

  #     - name: Pytest
  #       run: |     
  #         docker run -e GITHUB_TOKEN=${{ github.token }} $DOCKER_IMAGE:$DOCKER_TAG pytest -v

  # ---------------------------------------------------------------------------          
  micromamba:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        #os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment.yml
          init-shell: >-
            bash
            powershell
          cache-environment: true
          post-cleanup: 'all'

      - name: Install
        shell: micromamba-shell {0}
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test]

      - name: CLI Help
        shell: micromamba-shell {0}
        run: |
          pangwas --help

      - name: Nextflow Help
        shell: micromamba-shell {0}
        run: |
          nextflow run . --help

      - name: Pytest
        shell: micromamba-shell {0}
        run: |
          pytest

      - name: Nextflow Test
        shell: micromamba-shell {0}
        run: |
          nextflow run . -profile test

      - name: Upload Code Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 7
          if-no-files-found: error
